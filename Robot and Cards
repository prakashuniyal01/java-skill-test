Recently, Pero has been into robotics, so he decided to make a robot that checks whether a deck of poker cards is complete.
He’s already done a fair share of work - he wrote a programme that recognizes the suits of the cards. For simplicity’s sake, we can assume that all cards have a suit and a number.
The suit of the card is one of the characters P, K, H, T, and the number of the card is an integer between 1 and 13. The robot labels each card in the format TXY where T is the suit and XY is the number. If the card’s number consists of one digit, then X = 0. For example, the card of suit P and number 9 is labelled P09.
A complete deck has 52 cards in total - for each of the four suits there is exactly one card with a number between 1 and 13.
The robot has read the labels of all the cards in the deck and combined them into the string S.
Help Pero finish the robot by writing a programme that reads the string made out of card labels and outputs how many cards are missing for each suit.
If there are two exact same cards in the deck, output ERROR.
Input Format:
The first and only line of input contains the string S, containing all the card labels. 
Constraints:
1 ≤ |S| ≤ 1000
Time limit : 1 sec
Output Format:
If there are two exact same cards in the deck, output “ERROR”.
Otherwise, the first and only line of output must consist of 4 space-separated numbers: how many cards of the suit P K, H, T are missing, respectively. 
Sample Input 1:
P01K02H03H04
Sample Output 1:
12 12 11 13
Sample Input 2:
H02H10P11H02
Sample Output 2:
ERROR
Explanation:
Clarification of the first example: The robot has read one card of the suit P, one card of the suit K, two cards of the suit H.
Clarification of the second example: There were two cards of the suit H with number 2, so the robot reports an error.
////////////// code in python///////////////////
## Read input as specified in the question.
## Print output as specified in the question.
#Write your code here
def main():
    s = input().strip()
    cards = [0] * 4
    for i in range(0, len(s), 3):
        t = s[i]
        if t == 'P':
            cards[0] += 1
        elif t == 'K':
            cards[1] += 1
        elif t == 'H':
            cards[2] += 1
        elif t == 'T':
            cards[3] += 1
    counts = [13 - cards[i] for i in range(4)]
    d = {}
    for i in range(0, len(s), 3):
        card = s[i:i+3]
        if card in d:
            print("ERROR")
            return
        d[card] = 1
    for count in counts:
        print(count, end=' ')
    print()

if __name__ == '__main__':
    main()
