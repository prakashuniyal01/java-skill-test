Reverse the Linked List
Send Feedback
Given a linked list of size N. You need to reverse every k nodes (where k is an input to the function) in the linked list.
Input:
First line contains length of linked list and next line contains the linked list elements.
Output:
Single line of output which contains the linked list with every k group elements reversed.
Example:
Input:
8 1 2 2 4 5 6 7 8 4

Output:
4 2 2 1 8 7 6 5

Explanation:
Since, k = 4. So, we have to reverse every group of two elements. Modified linked list is as 4, 2, 2, 1, 8, 7, 6, 5.

code in java
****************************************************

public class Solution{
    public static Node reverse(Node head,int k)
    {
        Node prev=null;
        Node curr=head;
        Node next=null;
        int count=0;
        while(count<k && curr!=null)
        {
            next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=next;
            count++;
        
        }
        if(next!=null)
        {
            head.next=reverse(next,k);
        }
        return prev;
    }
}
